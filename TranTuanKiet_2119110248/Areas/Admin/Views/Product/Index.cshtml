@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<TranTuanKiet_2119110248.Context.Product>

@{
    ViewBag.Title = "Index";
}
<style>
    .pagination{
        display:inline-block;
        padding-left:0;
        margin:20px 0 ;
        border-radius:4px;
    }
    .pagination > li{
        display:inline;
    }
        .pagination > li > a,
        .pagination > li > span {
            position: relative;
            float: left;
            padding: 6px 12px;
            margin-left: -1px;
            line-height: 1.428571429;
            text-decoration: none;
            background-color:#ffffff;
            border: 2px solid #808080;
        }
        .pagination > li:last-child > a,
        .pagination > li:last-child > span{
            border-top-right-radius:4px;
            border-bottom-right-radius:4px;
        }
        .pagination > li a:hover,
        .pagination > li span:hover,
        .pagination > li a:focus,
        .pagination > li >span:focus{
            background-color:#ff0000;
        }
        .pagination > .active > a,
        .pagination > .active > span,
        .pagination > .active > a:hover,
        .pagination > .active > span:hover,
        .pagination > .active > a:focus,
        .pagination > .active > span:focus{
            z-index:2;
            color :#ffffff;
            background-color:#428bca;
            border-color :#dddddd;
        }
       .pagination-lg > li > a, 
       .pagination-lg > li > span{
           padding:10px 16px;
           font-size :18px;
       } 
       .pagination-lg > li:last-child > a,
       .pagination-lg > li:last-child > span{
           border-bottom-left-radius:6px;
           border-top-left-radius: 6px;
       }
       .pagination-sm > li > a,
       .pagination-sm > li > span{
           padding:5px 10px;
           font-size:12px;
       }
    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span {
        border-bottom-left-radius: 3px;
        border-top-left-radius: 3px;
    }
    .pagination-sm > li:last-child > a,
    .pagination-sm > li:last-child > span {
        border-top-right-radius: 3px;
        border-bottom-right-radius: 3px;
    }
    .pager{
        padding-left :0;
        margin:0;
        text-align:center;
        list-style:none;
    }
    .pager:before,
    .pager:after{
        display:table;
        content:"";
    }
        .pager:after{
            clear:both;
        }
        .pager li > a,
        .pager li > span{
            display:inline-block;
            padding 5px 14px;
            background-color:#ffffff;
            border:2px solid #dddddd;
            border-radius:15px;
        }
        .pager li > a:hover ,
        .pager li > a:focus{
            text-decoration:none;
            background-color:#eeeeee;
        }
        .pager .next > a,
        .pager .next > span{
            float:right;
        }
        .pager .previous > a,
        .pager .previous > span{
            float:left;
        }
        .pager .disabled > a,
        .pager .disabled > a:hover
        .pager .disabled > a:focus
        .pager .disabled > span{
            color:#999999;
            cursor:not-allowed;
            background-color: #ffffff;
        }

</style>
<h1  style="margin-left:10px;">QUẢN LÝ SẢN PHẨM</h1>
<p>
    <a href="@Url.Action("Create", "Product")"><i class="fa-solid fa-circle-plus" style="margin-left:10px;"></i>THÊM SẢN PHẨM</a>
   
    @using (Html.BeginForm("Index", "Product", FormMethod.Get))
            {
                <div style="margin-left:10px; font-size:20px; font-weight:bold">
                    Tìm  sản phẩm : @Html.TextBox("searchString",ViewBag.CurrentFilter as string)
                    <input class="btn btn-primary" type="submit" value="Tìm Kiếm" />
                </div>
            }
</p>
<style>
    tr {
        border:1px solid #999999;
    }
</style>
<table class="table" style="margin-left:10px">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Avatar)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PriceDiscount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CategoryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().BrandId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ShortDes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FullDes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().IsActive)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().IsDelete)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CreateDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().UpdateDate)
        </th>
      
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            <img src="~/Content/images/Product/@item.Avatar" class="img-fluid figure-img" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PriceDiscount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CategoryId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BrandId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ShortDes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FullDes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsActive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsDelete)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UpdateDate)
        </td>
        <td>
            <a href="@Url.Action("Edit", "Product", new { id=item.ProductId })"><i class="fa-solid fa-pen-to-square"></i></a>   
            <a href="@Url.Action("Details", "Product", new {id=item.ProductId })"><i class="fa-solid fa-circle-info"></i></a>
            <a href="@Url.Action("Delete", "Product", new { id=item.ProductId})"><i class="fa-solid fa-trash-can"></i></a>


        </td>
    </tr>
}
</table>
<div style="margin-left:10px">
    Trang @(Model.PageCount< Model.PageNumber ? 0: Model.PageNumber)or @Model.PageCount
    @Html.PagedListPager(Model, Page => Url.Action("Index", new { Page, currentFilter = ViewBag.currentFilter }))
</div>
